Document - 
    NamespaceDeclaration -  - Test
        UsingDirective - (3:1,1 [14] ) - System
        UsingDirective - (18:2,1 [34] ) - System.Collections.Generic
        UsingDirective - (53:3,1 [19] ) - System.Linq
        UsingDirective - (73:4,1 [30] ) - System.Threading.Tasks
        UsingDirective - (104:5,1 [39] ) - Microsoft.AspNetCore.Components
        ClassDeclaration -  - public partial - TestComponent - global::Microsoft.AspNetCore.Components.ComponentBase - 
            MethodDeclaration -  - protected override - void - BuildRenderTree
                MarkupElement - (0:0,0 [134] x:\dir\subdir\Test\TestComponent.cshtml) - div
                    HtmlAttribute - (16:0,16 [21] x:\dir\subdir\Test\TestComponent.cshtml) - myvalue=" - "
                        CSharpExpressionAttributeValue -  - 
                            IntermediateToken -  - CSharp - global::Microsoft.AspNetCore.Components.BindConverter.FormatValue(
                            IntermediateToken -  - CSharp - (() => @ParentValue)
                            IntermediateToken -  - CSharp - )
                    HtmlAttribute - (16:0,16 [21] x:\dir\subdir\Test\TestComponent.cshtml) - myevent=" - "
                        CSharpExpressionAttributeValue -  - 
                            IntermediateToken -  - CSharp - global::Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => (() => @ParentValue) = __value, 
                            IntermediateToken -  - CSharp - (() => @ParentValue)
                            IntermediateToken -  - CSharp - , setter: (value => ValueChanged(value))
                            IntermediateToken -  - CSharp - , after: (() => AfterValueChanged())
                            IntermediateToken -  - CSharp - )
            CSharpCode - (143:2,7 [226] x:\dir\subdir\Test\TestComponent.cshtml)
                LazyIntermediateToken - (143:2,7 [226] x:\dir\subdir\Test\TestComponent.cshtml) - CSharp - \n    public string ParentValue { get; set; } = "hi";\n\n    Task ValueChanged(string value)\n    {\n        return Task.CompletedTask;\n    }\n\n    Task AfterValueChanged()\n    {\n        return Task.CompletedTask;\n    }\n
